def get_digit(number, n):
    return number // 10**n % 10

def evaluate(arr):
        idx = 0
        myinput = 5

        inst = arr[idx]
        while (inst != 99):
            op = inst % 10
            mode1 = get_digit(inst, 2)
            mode2 = get_digit(inst, 3)
            mode3 = get_digit(inst, 4)
            src1_idx = arr[idx+1] if mode1 == 0 else idx+1
            src2_idx = arr[idx+2] if mode2 == 0 else idx+2
            dest_idx = arr[idx+3]
            assert(mode3 == 0)
            if op == 1: # add
                arr[dest_idx] = arr[src1_idx] + arr[src2_idx]
                idx += 4
            elif op == 2: # mult
                arr[dest_idx] = arr[src1_idx] * arr[src2_idx]
                idx += 4
            elif op == 3: # input
                arr[src1_idx] = myinput
                idx += 2
            elif op == 4: # output
                print arr[src1_idx]
                idx += 2
            elif op == 5: # jump if true
                idx = arr[src2_idx] if arr[src1_idx] != 0 else idx + 3
            elif op == 6: # jump if false
                idx = arr[src2_idx] if arr[src1_idx] == 0 else idx + 3
            elif op == 7: # less than
                arr[dest_idx] = 1 if arr[src1_idx] < arr[src2_idx] else 0
                idx += 4
            elif op == 8: # equals
                arr[dest_idx] = 1 if arr[src1_idx] == arr[src2_idx] else 0
                idx += 4
            else:
                print "Bad opcode:", op
            inst = arr[idx]

f = "3,225,1,225,6,6,1100,1,238,225,104,0,1101,37,34,224,101,-71,224,224,4,224,1002,223,8,223,101,6,224,224,1,224,223,223,1002,113,50,224,1001,224,-2550,224,4,224,1002,223,8,223,101,2,224,224,1,223,224,223,1101,13,50,225,102,7,187,224,1001,224,-224,224,4,224,1002,223,8,223,1001,224,5,224,1,224,223,223,1101,79,72,225,1101,42,42,225,1102,46,76,224,101,-3496,224,224,4,224,102,8,223,223,101,5,224,224,1,223,224,223,1102,51,90,225,1101,11,91,225,1001,118,49,224,1001,224,-140,224,4,224,102,8,223,223,101,5,224,224,1,224,223,223,2,191,87,224,1001,224,-1218,224,4,224,1002,223,8,223,101,4,224,224,1,224,223,223,1,217,83,224,1001,224,-124,224,4,224,1002,223,8,223,101,5,224,224,1,223,224,223,1101,32,77,225,1101,29,80,225,101,93,58,224,1001,224,-143,224,4,224,102,8,223,223,1001,224,4,224,1,223,224,223,1101,45,69,225,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,7,226,226,224,102,2,223,223,1005,224,329,101,1,223,223,108,677,226,224,102,2,223,223,1005,224,344,1001,223,1,223,1108,226,677,224,102,2,223,223,1005,224,359,1001,223,1,223,8,677,226,224,102,2,223,223,1006,224,374,1001,223,1,223,107,226,226,224,102,2,223,223,1006,224,389,101,1,223,223,1108,677,226,224,1002,223,2,223,1005,224,404,1001,223,1,223,108,677,677,224,102,2,223,223,1005,224,419,101,1,223,223,7,226,677,224,1002,223,2,223,1006,224,434,1001,223,1,223,107,226,677,224,102,2,223,223,1005,224,449,101,1,223,223,1108,677,677,224,1002,223,2,223,1006,224,464,101,1,223,223,7,677,226,224,102,2,223,223,1006,224,479,101,1,223,223,1007,677,677,224,1002,223,2,223,1005,224,494,101,1,223,223,1008,226,226,224,102,2,223,223,1006,224,509,1001,223,1,223,107,677,677,224,102,2,223,223,1006,224,524,1001,223,1,223,8,226,226,224,1002,223,2,223,1005,224,539,1001,223,1,223,1007,677,226,224,102,2,223,223,1006,224,554,1001,223,1,223,1007,226,226,224,1002,223,2,223,1005,224,569,1001,223,1,223,8,226,677,224,1002,223,2,223,1006,224,584,101,1,223,223,108,226,226,224,1002,223,2,223,1006,224,599,101,1,223,223,1107,677,226,224,1002,223,2,223,1005,224,614,1001,223,1,223,1107,226,677,224,102,2,223,223,1006,224,629,1001,223,1,223,1008,226,677,224,102,2,223,223,1005,224,644,101,1,223,223,1107,226,226,224,102,2,223,223,1006,224,659,1001,223,1,223,1008,677,677,224,102,2,223,223,1006,224,674,1001,223,1,223,4,223,99,226"
arr = [int(x) for x in f.split(',')]
evaluate(arr)
print arr
